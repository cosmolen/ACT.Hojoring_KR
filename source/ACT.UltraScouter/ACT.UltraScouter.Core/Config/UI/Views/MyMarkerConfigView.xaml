<Page
  x:Class="ACT.UltraScouter.Config.UI.Views.MyMarkerConfigView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:wpf="clr-namespace:FFXIV.Framework.WPF;assembly=FFXIV.Framework"
  xmlns:vm="clr-namespace:ACT.UltraScouter.Config.UI.ViewModels"
  xmlns:fw="clr-namespace:FFXIV.Framework.Common;assembly=FFXIV.Framework"
  xmlns:local="clr-namespace:ACT.UltraScouter.Config.UI.Views"
  xmlns:mainv="clr-namespace:ACT.UltraScouter.Views"
  xmlns:cnv="clr-namespace:FFXIV.Framework.WPF.Converters;assembly=FFXIV.Framework"
  xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
  mc:Ignorable="d"
  Title="MyMarkerConfigView"
  TextOptions.TextFormattingMode="Display"
  TextOptions.TextHintingMode="Animated"
  TextOptions.TextRenderingMode="ClearType"
  RenderOptions.ClearTypeHint="Enabled"
  RenderOptions.BitmapScalingMode="HighQuality"
  RenderOptions.EdgeMode="Unspecified"
  Background="White"
  FontFamily="Consolas, Yu Gothic UI, Meiryo UI"
  FontSize="17"
  d:DesignWidth="1024"
  d:DataContext="{d:DesignInstance Type=vm:MyMarkerConfigViewModel}">

  <Page.Resources>
    <ResourceDictionary>
      <Style TargetType="CheckBox">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
      </Style>

      <cnv:ColorToSolidColorBrushConverter x:Key="ColorToBrushConverter" />
      <cnv:BoolToCollapsedConverter x:Key="BoolToVisibilityConverter" />

      <ResourceDictionary.MergedDictionaries>
        <wpf:DesignTimeResourceDictionary Source="../../../resources/strings/Strings.UlSco.en-US.xaml" />
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </Page.Resources>

  <ScrollViewer>
    <StackPanel Margin="20">
      <CheckBox
        Margin="0 0 0 0"
        Content="{DynamicResource Common_Visible}"
        IsChecked="{Binding MyMarker.Visible, Mode=TwoWay}" />
      <CheckBox
        Margin="0 5 0 0"
        Content="{DynamicResource Enmity_HideInNotCombat}"
        IsChecked="{Binding MyMarker.HideInNotCombat, Mode=TwoWay}" />

      <Label
        Margin="0 20 0 0"
        Content="{DynamicResource Common_Location}" />
      <StackPanel Orientation="Horizontal">
        <TextBlock Margin="6 0 5 0" Text="X" VerticalAlignment="Center" />
        <xctk:DoubleUpDown Value="{Binding MyMarker.Location.X, Mode=TwoWay}" Width="75" Increment="1" />
        <TextBlock Margin="10 0 5 0" Text="Y" VerticalAlignment="Center" />
        <xctk:DoubleUpDown Value="{Binding MyMarker.Location.Y, Mode=TwoWay}" Width="75" Increment="1" />

        <TextBlock Margin="15 0 0 0" VerticalAlignment="Center">
          <Hyperlink Command="{Binding ToCenterCommand, Mode=OneWay}">
            <TextBlock Text="Center" />
          </Hyperlink>
        </TextBlock>
      </StackPanel>

      <Label
        Margin="0 5 0 0"
        Content="{DynamicResource Common_Scale}" />
      <xctk:DoubleUpDown
        HorizontalAlignment="Left"
        Value="{Binding MyMarker.Scale, Mode=TwoWay}"
        Width="80"
        Minimum="0.01"
        Maximum="4.00"
        Increment="0.01"
        FormatString="N2" />

      <Label
        Margin="0 15 0 0"
        Content="Type" />
      <ComboBox
        HorizontalAlignment="Left"
        Width="140"
        ItemsSource="{Binding MarkerTypes, Mode=OneWay}"
        SelectedItem="{Binding MyMarker.MarkerType, Mode=TwoWay}" />

      <Label
        Margin="0 15 0 0"
        Content="Color" />
      <TextBlock Margin="7,0,0,0" FontWeight="Bold">
        <Hyperlink
          Command="{Binding DisplayTextColorCommand, Mode=OneWay}"
          CommandParameter="{Binding MyMarker.DisplayText.Color}">
          <TextBlock Text="{DynamicResource Common_FillColor}" />
        </Hyperlink>
      </TextBlock>

      <TextBlock Margin="7,0,0,0" FontWeight="Bold">
        <Hyperlink
          Command="{Binding DisplayTextOutlineColorCommand, Mode=OneWay}"
          CommandParameter="{Binding MyMarker.DisplayText.OutlineColor}">
          <TextBlock Text="{DynamicResource Common_StrokeColor}" />
        </Hyperlink>
      </TextBlock>
    </StackPanel>
  </ScrollViewer>
</Page>
