<Window
  x:Class="ACT.UltraScouter.Views.TacticalRadarView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:local="clr-namespace:ACT.UltraScouter.Views"
  xmlns:system="clr-namespace:System;assembly=mscorlib"
  xmlns:cnv="clr-namespace:ACT.UltraScouter.Views.Converters"
  xmlns:vm="clr-namespace:ACT.UltraScouter.ViewModels"
  xmlns:logs_model="clr-namespace:ACT.UltraScouter.Models.FFLogs"
  xmlns:ctrl="clr-namespace:FFXIV.Framework.WPF.Controls;assembly=FFXIV.Framework"
  xmlns:fwcnv="clr-namespace:FFXIV.Framework.WPF.Converters;assembly=FFXIV.Framework"
  xmlns:fa="http://schemas.fontawesome.io/icons/"
  xmlns:iconpack="http://metro.mahapps.com/winfx/xaml/iconpacks"
  mc:Ignorable="d"
  AllowsTransparency="True"
  ShowInTaskbar="False"
  SizeToContent="WidthAndHeight"
  TextOptions.TextFormattingMode="Display"
  TextOptions.TextHintingMode="Auto"
  TextOptions.TextRenderingMode="ClearType"
  RenderOptions.ClearTypeHint="Enabled"
  RenderOptions.BitmapScalingMode="HighQuality"
  RenderOptions.EdgeMode="Unspecified"
  WindowStyle="None"
  Background="#01000000"
  Left="{Binding Path=Config.Location.X, Mode=TwoWay}"
  Top="{Binding Path=Config.Location.Y, Mode=TwoWay}"
  d:DataContext="{d:DesignInstance Type=vm:TacticalRadarViewModel, IsDesignTimeCreatable=True}"
  DataContext="{Binding RelativeSource={RelativeSource Self}}">

  <Window.Resources>
    <BooleanToVisibilityConverter x:Key="VisibilityConverter" />
    <fwcnv:BoolToHiddenConverter x:Key="HiddenConverter" />
    <fwcnv:BoolToCollapsedNegativeConverter x:Key="NotVisibilityConverter" />
    <fwcnv:ColorToSolidColorBrushConverter x:Key="ColorToBrushConverter" />
    <cnv:StrokeThicknessToBlurRadiusConverter x:Key="StrokeThicknessToBlurRadiusConverter" />
    <fwcnv:MultipleConverter x:Key="MultipleConverter" />

    <Style x:Key="CameraStyle" TargetType="{x:Type ctrl:LightOutlineTextBlock}">
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="Fill" Value="{Binding Config.DisplayText.Color, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}" />
      <Setter Property="Stroke" Value="{Binding Config.DisplayText.OutlineColor, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}" />
      <Setter Property="FontFamily" Value="{Binding Config.DisplayText.Font.FontFamily, Mode=OneWay}" />
      <Setter Property="FontStretch" Value="{Binding Config.DisplayText.Font.Stretch, Mode=OneWay}" />
      <Setter Property="FontWeight" Value="{Binding Config.DisplayText.Font.Weight, Mode=OneWay}" />
      <Setter Property="FontStyle" Value="{Binding Config.DisplayText.Font.Style, Mode=OneWay}" />
      <Setter Property="BlurOpacity" Value="{Binding Config.DisplayText.OutlineColor.ScA, Mode=OneWay}" />
      <Setter Property="StrokeOpacity" Value="{Binding Config.DisplayText.OutlineColor.ScA, Mode=OneWay}" />
      <Setter Property="FontSize" Value="{Binding Config.DisplayText.Font.Size, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=0.80}" />
      <Setter Property="StrokeThickness" Value="{Binding Config.DisplayText.Font.OutlineThickness, Mode=OneWay}" />
      <Setter Property="BlurRadius" Value="{Binding Config.DisplayText.Font.BlurRadius, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=2}" />
    </Style>
  </Window.Resources>

  <Border
    CornerRadius="8"
    Background="{Binding Config.Background, Mode=OneWay, Converter={StaticResource ColorToBrushConverter}}"
    Visibility="{Binding IsExistsTargets, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">

    <Border.LayoutTransform>
      <ScaleTransform
        ScaleX="{Binding Config.Scale, Mode=OneWay}"
        ScaleY="{Binding Config.Scale, Mode=OneWay}" />
    </Border.LayoutTransform>

    <d:DesignerProperties.DesignStyle>
      <Style TargetType="Border">
        <Setter Property="Background" Value="Transparent" />
      </Style>
    </d:DesignerProperties.DesignStyle>

    <StackPanel Margin="10 10 0 0">
      <ctrl:LightOutlineTextBlock
        Visibility="{Binding Config.IsDebugMode, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"
        Margin="0 0 0 8"
        Style="{DynamicResource CameraStyle}"
        Text="{Binding CameraHeading, Mode=OneWay, StringFormat=Camera: {0:N2}}" />

      <ItemsControl
        Grid.IsSharedSizeScope="True"
        Focusable="False"
        IsTabStop="False"
        ItemsSource="{Binding TacticalTargetView, Mode=OneWay}">

        <ItemsControl.Resources>
          <Style x:Key="OutlineStyle" TargetType="{x:Type ctrl:LightOutlineTextBlock}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Fill" Value="{Binding Config.DisplayText.Color, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}" />
            <Setter Property="Stroke" Value="{Binding Config.DisplayText.OutlineColor, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}" />
            <Setter Property="StrokeThickness" Value="{Binding Config.DisplayText.Font.OutlineThickness, Mode=OneWay}" />
            <Setter Property="FontFamily" Value="{Binding Config.DisplayText.Font.FontFamily, Mode=OneWay}" />
            <Setter Property="FontSize" Value="{Binding Config.DisplayText.Font.Size, Mode=OneWay}" />
            <Setter Property="FontStretch" Value="{Binding Config.DisplayText.Font.Stretch, Mode=OneWay}" />
            <Setter Property="FontWeight" Value="{Binding Config.DisplayText.Font.Weight, Mode=OneWay}" />
            <Setter Property="FontStyle" Value="{Binding Config.DisplayText.Font.Style, Mode=OneWay}" />
            <Setter Property="BlurRadius" Value="{Binding Config.DisplayText.Font.BlurRadius, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=2}" />
            <Setter Property="BlurOpacity" Value="{Binding Config.DisplayText.OutlineColor.ScA, Mode=OneWay}" />
            <Setter Property="StrokeOpacity" Value="{Binding Config.DisplayText.OutlineColor.ScA, Mode=OneWay}" />
          </Style>

          <Style x:Key="OutlineIconStyle" TargetType="{x:Type iconpack:PackIconFontAwesome}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{Binding Config.DisplayText.Color, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}" />
            <Setter Property="FontFamily" Value="{Binding Config.DisplayText.Font.FontFamily, Mode=OneWay}" />
            <Setter Property="FontSize" Value="{Binding Config.DisplayText.Font.Size, Mode=OneWay}" />
            <Setter Property="FontStretch" Value="{Binding Config.DisplayText.Font.Stretch, Mode=OneWay}" />
            <Setter Property="FontWeight" Value="{Binding Config.DisplayText.Font.Weight, Mode=OneWay}" />
            <Setter Property="FontStyle" Value="{Binding Config.DisplayText.Font.Style, Mode=OneWay}" />
            <Setter Property="Effect">
              <Setter.Value>
                <DropShadowEffect
                  Direction="0"
                  ShadowDepth="0"
                  BlurRadius="{Binding Config.DisplayText.Font.BlurRadius, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=1.4}"
                  Color="{Binding Config.DisplayText.OutlineColor, Mode=OneWay}"
                  Opacity="{Binding Config.DisplayText.OutlineColor.ScA, Mode=OneWay}" />
              </Setter.Value>
            </Setter>
          </Style>

          <Style x:Key="DistanceStyle" TargetType="{x:Type ctrl:LightOutlineTextBlock}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Fill" Value="{Binding Config.DisplayText.Color, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}" />
            <Setter Property="Stroke" Value="{Binding Config.DisplayText.OutlineColor, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}" />
            <Setter Property="FontFamily" Value="{Binding Config.DisplayText.Font.FontFamily, Mode=OneWay}" />
            <Setter Property="FontStretch" Value="{Binding Config.DisplayText.Font.Stretch, Mode=OneWay}" />
            <Setter Property="FontWeight" Value="{Binding Config.DisplayText.Font.Weight, Mode=OneWay}" />
            <Setter Property="FontStyle" Value="{Binding Config.DisplayText.Font.Style, Mode=OneWay}" />
            <Setter Property="BlurOpacity" Value="{Binding Config.DisplayText.OutlineColor.ScA, Mode=OneWay}" />
            <Setter Property="StrokeOpacity" Value="{Binding Config.DisplayText.OutlineColor.ScA, Mode=OneWay}" />
            <Setter Property="FontSize" Value="{Binding Config.DisplayText.Font.Size, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=0.80}" />
            <Setter Property="StrokeThickness" Value="{Binding Config.DisplayText.Font.OutlineThickness, Mode=OneWay}" />
            <Setter Property="BlurRadius" Value="{Binding Config.DisplayText.Font.BlurRadius, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=2}" />
          </Style>
        </ItemsControl.Resources>

        <ItemsControl.ItemContainerStyle>
          <Style TargetType="ContentPresenter">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
          </Style>
        </ItemsControl.ItemContainerStyle>

        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <StackPanel Orientation="{Binding Config.Orientation, Mode=OneWay}" />
          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>

        <ItemsControl.ItemTemplate>
          <DataTemplate>
            <Grid
              Margin="0 0 15 10"
              Visibility="{Binding IsExistsName, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>

              <StackPanel
                Grid.Row="0"
                Orientation="Horizontal">
                <!-- Heading start -->
                <DockPanel
                  Visibility="{Binding IsMonster, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"
                  VerticalAlignment="Center"
                  Margin="0 0 6 0"
                  RenderTransformOrigin="0.5 0.5">
                  <DockPanel.RenderTransform>
                    <RotateTransform
                      Angle="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.OriginAngle, Mode=OneWay}" />
                  </DockPanel.RenderTransform>

                  <Grid
                    RenderTransformOrigin="0.5 0.5">
                    <Grid.RenderTransform>
                      <RotateTransform Angle="{Binding Path=HeadingAngle, Mode=OneWay}" />
                    </Grid.RenderTransform>

                    <iconpack:PackIconFontAwesome Style="{DynamicResource OutlineIconStyle}" Kind="ArrowAltCircleDownRegular" Width="{Binding ElementName=NameLabel, Path=ActualHeight, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=1.2}" Height="{Binding RelativeSource={RelativeSource Self}, Path=Width, Mode=OneWay}" />
                    <iconpack:PackIconFontAwesome Style="{DynamicResource OutlineIconStyle}" Kind="ArrowAltCircleDownRegular" Width="{Binding ElementName=NameLabel, Path=ActualHeight, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=1.2}" Height="{Binding RelativeSource={RelativeSource Self}, Path=Width, Mode=OneWay}" />
                    <iconpack:PackIconFontAwesome Style="{DynamicResource OutlineIconStyle}" Kind="ArrowAltCircleDownRegular" Width="{Binding ElementName=NameLabel, Path=ActualHeight, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=1.2}" Height="{Binding RelativeSource={RelativeSource Self}, Path=Width, Mode=OneWay}" />
                    <iconpack:PackIconFontAwesome Style="{DynamicResource OutlineIconStyle}" Kind="ArrowAltCircleDownRegular" Width="{Binding ElementName=NameLabel, Path=ActualHeight, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=1.2}" Height="{Binding RelativeSource={RelativeSource Self}, Path=Width, Mode=OneWay}" />
                    <iconpack:PackIconFontAwesome Style="{DynamicResource OutlineIconStyle}" Kind="ArrowAltCircleDownRegular" Width="{Binding ElementName=NameLabel, Path=ActualHeight, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=1.2}" Height="{Binding RelativeSource={RelativeSource Self}, Path=Width, Mode=OneWay}" />
                    <iconpack:PackIconFontAwesome Style="{DynamicResource OutlineIconStyle}" Kind="ArrowAltCircleDownRegular" Width="{Binding ElementName=NameLabel, Path=ActualHeight, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=1.2}" Height="{Binding RelativeSource={RelativeSource Self}, Path=Width, Mode=OneWay}" />
                  </Grid>
                </DockPanel>
                <!-- Heading end -->

                <Grid
                  VerticalAlignment="Center">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>

                  <!-- JobIcon -->
                  <Viewbox
                    Grid.Column="0"
                    Margin="0 0 5 0"
                    Stretch="Uniform"
                    Visibility="{Binding IsPC, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"
                    Height="{Binding ElementName=NameLabel, Path=ActualHeight, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=1.2}"
                    Width="{Binding RelativeSource={RelativeSource Self}, Path=Height, Mode=OneWay}">
                    <Image Source="{Binding JobIcon, Mode=OneWay}" />
                  </Viewbox>

                  <!-- Name -->
                  <ctrl:LightOutlineTextBlock
                    Grid.Column="1"
                    DockPanel.Dock="Left"
                    HorizontalAlignment="Left"
                    x:Name="NameLabel"
                    Style="{DynamicResource OutlineStyle}"
                    Text="{Binding Name, Mode=OneWay}"
                    TextTrimming="CharacterEllipsis" />
                </Grid>

                <!-- Direction & Distance start -->
                <Grid
                  VerticalAlignment="Center"
                  x:Name="DirectionGrid"
                  Margin="15 0 0 0"
                  MinWidth="{Binding ElementName=NameLabel, Path=ActualHeight, Converter={StaticResource MultipleConverter}, ConverterParameter=2.1}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>

                  <!-- Direction Arrow -->
                  <DockPanel
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    RenderTransformOrigin="0.5 0.5">
                    <DockPanel.RenderTransform>
                      <RotateTransform
                        Angle="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.OriginAngle, Mode=OneWay}" />
                    </DockPanel.RenderTransform>

                    <Grid
                      RenderTransformOrigin="0.5 0.5">
                      <Grid.RenderTransform>
                        <RotateTransform Angle="{Binding Path=DirectionAngle, Mode=OneWay}" />
                      </Grid.RenderTransform>

                      <iconpack:PackIconFontAwesome Style="{DynamicResource OutlineIconStyle}" Kind="ArrowRightSolid" Width="{Binding ElementName=NameLabel, Path=ActualHeight, Converter={StaticResource MultipleConverter}, ConverterParameter=0.9}" Height="{Binding RelativeSource={RelativeSource Self}, Path=Width, Mode=OneWay}" />
                      <iconpack:PackIconFontAwesome Style="{DynamicResource OutlineIconStyle}" Kind="ArrowRightSolid" Width="{Binding ElementName=NameLabel, Path=ActualHeight, Converter={StaticResource MultipleConverter}, ConverterParameter=0.9}" Height="{Binding RelativeSource={RelativeSource Self}, Path=Width, Mode=OneWay}" />
                      <iconpack:PackIconFontAwesome Style="{DynamicResource OutlineIconStyle}" Kind="ArrowRightSolid" Width="{Binding ElementName=NameLabel, Path=ActualHeight, Converter={StaticResource MultipleConverter}, ConverterParameter=0.9}" Height="{Binding RelativeSource={RelativeSource Self}, Path=Width, Mode=OneWay}" />
                      <iconpack:PackIconFontAwesome Style="{DynamicResource OutlineIconStyle}" Kind="ArrowRightSolid" Width="{Binding ElementName=NameLabel, Path=ActualHeight, Converter={StaticResource MultipleConverter}, ConverterParameter=0.9}" Height="{Binding RelativeSource={RelativeSource Self}, Path=Width, Mode=OneWay}" />
                      <iconpack:PackIconFontAwesome Style="{DynamicResource OutlineIconStyle}" Kind="ArrowRightSolid" Width="{Binding ElementName=NameLabel, Path=ActualHeight, Converter={StaticResource MultipleConverter}, ConverterParameter=0.9}" Height="{Binding RelativeSource={RelativeSource Self}, Path=Width, Mode=OneWay}" />
                      <iconpack:PackIconFontAwesome Style="{DynamicResource OutlineIconStyle}" Kind="ArrowRightSolid" Width="{Binding ElementName=NameLabel, Path=ActualHeight, Converter={StaticResource MultipleConverter}, ConverterParameter=0.9}" Height="{Binding RelativeSource={RelativeSource Self}, Path=Width, Mode=OneWay}" />
                    </Grid>
                  </DockPanel>

                  <ctrl:LightOutlineTextBlock
                    Grid.Column="1"
                    Margin="8 0 0 0"
                    VerticalAlignment="Center"
                    Style="{DynamicResource DistanceStyle}"
                    Text="{Binding Distance, Mode=OneWay, StringFormat=N1}" />
                </Grid>
                <!-- Direction & Distance end -->
              </StackPanel>

              <!-- debug info start -->
              <StackPanel
                Grid.Row="1"
                Visibility="{Binding Config.IsDebugMode, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"
                Margin="0 3 0 0"
                Orientation="Horizontal">
                <ctrl:LightOutlineTextBlock
                  VerticalAlignment="Center"
                  Style="{DynamicResource DistanceStyle}"
                  Text="{Binding Heading, Mode=OneWay, StringFormat=Head: {0:N2}}" />
                <ctrl:LightOutlineTextBlock
                  Margin="6 0 0 0"
                  VerticalAlignment="Center"
                  Style="{DynamicResource DistanceStyle}"
                  Text="{Binding X, Mode=OneWay, StringFormat=X: {0:N2}}" />
                <ctrl:LightOutlineTextBlock
                  Margin="6 0 0 0"
                  VerticalAlignment="Center"
                  Style="{DynamicResource DistanceStyle}"
                  Text="{Binding Y, Mode=OneWay, StringFormat=Y: {0:N2}}" />
              </StackPanel>
              <!-- debug info end -->
            </Grid>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ItemsControl>
    </StackPanel>
  </Border>
</Window>
