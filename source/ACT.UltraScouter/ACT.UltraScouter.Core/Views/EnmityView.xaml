<Window
  x:Class="ACT.UltraScouter.Views.EnmityView"
  Title="EnmityView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:local="clr-namespace:ACT.UltraScouter.Views"
  xmlns:system="clr-namespace:System;assembly=mscorlib"
  xmlns:cnv="clr-namespace:ACT.UltraScouter.Views.Converters"
  xmlns:vm="clr-namespace:ACT.UltraScouter.ViewModels"
  xmlns:logs_model="clr-namespace:ACT.UltraScouter.Models.FFLogs"
  xmlns:ctrl="clr-namespace:FFXIV.Framework.WPF.Controls;assembly=FFXIV.Framework"
  xmlns:fwcnv="clr-namespace:FFXIV.Framework.WPF.Converters;assembly=FFXIV.Framework"
  xmlns:fa="http://schemas.fontawesome.io/icons/"
  xmlns:debug="debug-mode"
  mc:Ignorable="d"
  AllowsTransparency="True"
  ShowInTaskbar="False"
  SizeToContent="WidthAndHeight"
  TextOptions.TextFormattingMode="Display"
  TextOptions.TextHintingMode="Auto"
  TextOptions.TextRenderingMode="ClearType"
  RenderOptions.ClearTypeHint="Enabled"
  RenderOptions.BitmapScalingMode="HighQuality"
  RenderOptions.EdgeMode="Unspecified"
  WindowStyle="None"
  Background="#01000000"
  Left="{Binding Path=Config.Location.X, Mode=TwoWay}"
  Top="{Binding Path=Config.Location.Y, Mode=TwoWay}"
  d:DataContext="{d:DesignInstance Type=vm:EnmityViewModel, IsDesignTimeCreatable=True}">

  <Window.Resources>
    <BooleanToVisibilityConverter x:Key="VisibilityConverter" />
    <fwcnv:BoolToHiddenConverter x:Key="HiddenConverter" />
    <fwcnv:BoolToCollapsedNegativeConverter x:Key="NotVisibilityConverter" />
    <fwcnv:ColorToSolidColorBrushConverter x:Key="ColorToBrushConverter" />
    <cnv:StrokeThicknessToBlurRadiusConverter x:Key="StrokeThicknessToBlurRadiusConverter" />
    <fwcnv:MultipleConverter x:Key="MultipleConverter" />
  </Window.Resources>

  <Border
    CornerRadius="8"
    Background="{Binding Config.Background, Mode=OneWay, Converter={StaticResource ColorToBrushConverter}}"
    Visibility="{Binding Model.IsExistsEnmityList, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">

    <Border.LayoutTransform>
      <ScaleTransform
        ScaleX="{Binding Config.Scale, Mode=OneWay}"
        ScaleY="{Binding Config.Scale, Mode=OneWay}" />
    </Border.LayoutTransform>

    <d:DesignerProperties.DesignStyle>
      <Style TargetType="Border">
        <Setter Property="Background" Value="Transparent" />
      </Style>
    </d:DesignerProperties.DesignStyle>

    <Grid Margin="12 9 13 6">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>

      <ItemsControl
        Grid.Row="0"
        Grid.IsSharedSizeScope="True"
        Focusable="False"
        IsTabStop="False"
        ItemsSource="{Binding Model.EnmityView, Mode=OneWay}">

        <ItemsControl.Resources>
          <Style x:Key="OutlineStyle" TargetType="{x:Type ctrl:LightOutlineTextBlock}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Fill" Value="{Binding DisplayText.Color, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}" />
            <Setter Property="Stroke" Value="{Binding DisplayText.OutlineColor, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}" />
            <Setter Property="StrokeThickness" Value="{Binding DisplayText.Font.OutlineThickness, Mode=OneWay}" />
            <Setter Property="FontFamily" Value="{Binding DisplayText.Font.FontFamily, Mode=OneWay}" />
            <Setter Property="FontSize" Value="{Binding DisplayText.Font.Size, Mode=OneWay}" />
            <Setter Property="FontStretch" Value="{Binding DisplayText.Font.Stretch, Mode=OneWay}" />
            <Setter Property="FontWeight" Value="{Binding DisplayText.Font.Weight, Mode=OneWay}" />
            <Setter Property="FontStyle" Value="{Binding DisplayText.Font.Style, Mode=OneWay}" />
            <Setter Property="BlurRadius" Value="{Binding DisplayText.Font.BlurRadius, Mode=OneWay}" />
            <Setter Property="BlurOpacity" Value="{Binding DisplayText.OutlineColor.ScA, Mode=OneWay}" />
            <Setter Property="StrokeOpacity" Value="{Binding DisplayText.OutlineColor.ScA, Mode=OneWay}" />
          </Style>

          <Style x:Key="DenomiNumericStyle" TargetType="{x:Type ctrl:DenomiNumericTextBlock}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Fill" Value="{Binding DisplayText.Color, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}" />
            <Setter Property="Stroke" Value="{Binding DisplayText.OutlineColor, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}" />
            <Setter Property="FontFamily" Value="{Binding DisplayText.Font.FontFamily, Mode=OneWay}" />
            <Setter Property="FontStretch" Value="{Binding DisplayText.Font.Stretch, Mode=OneWay}" />
            <Setter Property="FontWeight" Value="{Binding DisplayText.Font.Weight, Mode=OneWay}" />
            <Setter Property="FontStyle" Value="{Binding DisplayText.Font.Style, Mode=OneWay}" />
            <Setter Property="BlurOpacity" Value="{Binding DisplayText.OutlineColor.ScA, Mode=OneWay}" />
            <Setter Property="StrokeOpacity" Value="{Binding DisplayText.OutlineColor.ScA, Mode=OneWay}" />
            <Setter Property="FontSize" Value="{Binding DisplayText.Font.Size, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=0.9}" />
            <Setter Property="StrokeThickness" Value="{Binding DisplayText.Font.OutlineThickness, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=1}" />
            <Setter Property="BlurRadius" Value="{Binding DisplayText.Font.BlurRadius, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=1}" />
          </Style>

          <Style x:Key="DeltaSymbolStyle" TargetType="{x:Type ctrl:LightOutlineTextBlock}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Fill" Value="{Binding DisplayText.Color, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}" />
            <Setter Property="Stroke" Value="{Binding DisplayText.OutlineColor, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}" />
            <Setter Property="StrokeThickness" Value="{Binding DisplayText.Font.OutlineThickness, Mode=OneWay}" />
            <Setter Property="FontFamily" Value="{Binding DisplayText.Font.FontFamily, Mode=OneWay}" />
            <Setter Property="FontSize" Value="{Binding DisplayText.Font.Size, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=0.8}" />
            <Setter Property="FontStretch" Value="{Binding DisplayText.Font.Stretch, Mode=OneWay}" />
            <Setter Property="FontWeight" Value="{Binding DisplayText.Font.Weight, Mode=OneWay}" />
            <Setter Property="FontStyle" Value="{Binding DisplayText.Font.Style, Mode=OneWay}" />
            <Setter Property="BlurRadius" Value="{Binding DisplayText.Font.BlurRadius, Mode=OneWay}" />
            <Setter Property="BlurOpacity" Value="{Binding DisplayText.OutlineColor.ScA, Mode=OneWay}" />
            <Setter Property="StrokeOpacity" Value="{Binding DisplayText.OutlineColor.ScA, Mode=OneWay}" />
          </Style>
        </ItemsControl.Resources>

        <ItemsControl.ItemContainerStyle>
          <Style TargetType="ContentPresenter">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
          </Style>
        </ItemsControl.ItemContainerStyle>

        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <StackPanel />
          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>

        <ItemsControl.ItemTemplate>
          <DataTemplate>
            <Grid Margin="0 0 0 3">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!-- JobIcon -->
                <!-- Left Icon -->
                <Viewbox
                  Grid.Column="0"
                  Margin="0 0 5 0"
                  Stretch="Uniform"
                  VerticalAlignment="{Binding Config.BarVerticalAlignment, Mode=OneWay}"
                  Visibility="{Binding Config.IsVisibleIconLeft, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"
                  Height="{Binding ElementName=DummyNameLabel, Path=ActualHeight, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=1.6}"
                  Width="{Binding RelativeSource={RelativeSource Self}, Path=Height, Mode=OneWay}">
                  <Viewbox.LayoutTransform>
                    <ScaleTransform
                      ScaleX="{Binding Config.IconScale, Mode=OneWay}"
                      ScaleY="{Binding Config.IconScale, Mode=OneWay}" />
                  </Viewbox.LayoutTransform>
                  <Image Source="{Binding JobIcon, Mode=OneWay}" />
                </Viewbox>

                <!-- Right Icon -->
                <Viewbox
                  Grid.Column="2"
                  Margin="5 0 0 0"
                  Stretch="Uniform"
                  VerticalAlignment="{Binding Config.BarVerticalAlignment, Mode=OneWay}"
                  Visibility="{Binding Config.IsVisibleIconRight, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"
                  Height="{Binding ElementName=DummyNameLabel, Path=ActualHeight, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=1.6}"
                  Width="{Binding RelativeSource={RelativeSource Self}, Path=Height, Mode=OneWay}">
                  <Viewbox.LayoutTransform>
                    <ScaleTransform
                      ScaleX="{Binding Config.IconScale, Mode=OneWay}"
                      ScaleY="{Binding Config.IconScale, Mode=OneWay}" />
                  </Viewbox.LayoutTransform>
                  <Image Source="{Binding JobIcon, Mode=OneWay}" />
                </Viewbox>

                <StackPanel
                  Grid.Column="1"
                  VerticalAlignment="Center"
                  MaxWidth="{Binding BarWidthMax, Mode=OneWay}">
                  <DockPanel Margin="5 0">
                    <!-- Enmity Value -->
                    <Grid
                      x:Name="EnmityGrid"
                      Margin="10 0 0 0"
                      DockPanel.Dock="Right"
                      HorizontalAlignment="Right">
                      <!-- Absolute Value -->
                      <ctrl:DenomiNumericTextBlock
                        IsDenomi="{Binding Config.IsDenomi, Mode=OneWay}"
                        IsDisableBottom="True"
                        Style="{DynamicResource DenomiNumericStyle}"
                        Value="{Binding Enmity, Mode=OneWay}"
                        Visibility="{Binding Config.IsNotDisplayDifference, Mode=OneWay, Converter={StaticResource VisibilityConverter}}" />

                      <!-- Difference Value -->
                      <StackPanel
                        Orientation="Horizontal"
                        Visibility="{Binding Config.IsDisplayDifference, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
                        <ctrl:DenomiNumericTextBlock
                          Visibility="{Binding IsMe, Mode=OneWay, Converter={StaticResource NotVisibilityConverter}}"
                          IsDenomi="{Binding Config.IsDenomi, Mode=OneWay}"
                          IsDisableBottom="True"
                          IsSign="True"
                          Style="{DynamicResource DenomiNumericStyle}"
                          Value="{Binding EnmityDifference, Mode=OneWay}" />

                        <ctrl:LightOutlineTextBlock
                          Visibility="{Binding IsMe, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"
                          Style="{DynamicResource OutlineStyle}"
                          Text="{Binding Config.AlterTextMeValue, Mode=OneWay}" />
                      </StackPanel>
                    </Grid>

                    <Grid DockPanel.Dock="Left" HorizontalAlignment="Left">
                      <!-- Name -->
                      <ctrl:LightOutlineTextBlock
                        Visibility="{Binding Config.IsVisibleName, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"
                        Style="{DynamicResource OutlineStyle}"
                        Text="{Binding Name, Mode=OneWay}"
                        TextTrimming="CharacterEllipsis" />

                      <!-- Dummy Name -->
                      <ctrl:LightOutlineTextBlock
                        x:Name="DummyNameLabel"
                        Visibility="Hidden"
                        Style="{DynamicResource OutlineStyle}"
                        Text="" />
                    </Grid>
                  </DockPanel>
                </StackPanel>

                <!-- Hate Rate Bar -->
                <Grid
                  Grid.Column="1"
                  Panel.ZIndex="-2"
                  HorizontalAlignment="{Binding Config.BarHorizontalAlignment, Mode=OneWay}"
                  VerticalAlignment="{Binding Config.BarVerticalAlignment, Mode=OneWay}"
                  Margin="0 0 0 0">
                  <Rectangle
                    Visibility="{Binding Config.IsNearIndicator, Mode=OneWay, Converter={StaticResource NotVisibilityConverter}}"
                    HorizontalAlignment="{Binding Config.BarHorizontalAlignment, Mode=OneWay}"
                    Width="{Binding BarWidthMax, Mode=OneWay}"
                    Height="{Binding Config.BarHeight, Mode=OneWay}"
                    Fill="Black"
                    RadiusX="3"
                    RadiusY="3"
                    Opacity="0.4">
                    <Rectangle.Effect>
                      <DropShadowEffect
                        RenderingBias="Performance"
                        BlurRadius="5"
                        Direction="0"
                        ShadowDepth="0"
                        Color="Black"
                        Opacity="0.4" />
                    </Rectangle.Effect>
                  </Rectangle>
                  <Rectangle
                    HorizontalAlignment="{Binding Config.BarHorizontalAlignment, Mode=OneWay}"
                    Width="{Binding BarWidth, Mode=OneWay}"
                    Height="{Binding Config.BarHeight, Mode=OneWay}"
                    Fill="{Binding BarColorBrush, Mode=OneWay}"
                    RadiusX="3"
                    RadiusY="3">
                    <Rectangle.Effect>
                      <DropShadowEffect
                        RenderingBias="Performance"
                        BlurRadius="4"
                        Direction="0"
                        ShadowDepth="0"
                        Color="{Binding BarColorBrush.Color, Mode=OneWay}" />
                    </Rectangle.Effect>
                  </Rectangle>
                </Grid>
              </Grid>
            </Grid>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ItemsControl>

      <!-- EPS start -->
      <StackPanel
        Grid.Row="1"
        HorizontalAlignment="Right"
        Visibility="{Binding Config.IsVisibleNearThreshold, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">

        <StackPanel.Resources>
          <Style x:Key="ThresholdLabelStyle" TargetType="{x:Type ctrl:LightOutlineTextBlock}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Fill" Value="{Binding DisplayText.Color, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}" />
            <Setter Property="Stroke" Value="{Binding DisplayText.OutlineColor, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}" />
            <Setter Property="StrokeThickness" Value="{Binding DisplayText.Font.OutlineThickness, Mode=OneWay}" />
            <Setter Property="FontFamily" Value="{Binding DisplayText.Font.FontFamily, Mode=OneWay}" />
            <Setter Property="FontSize" Value="{Binding DisplayText.Font.Size, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=0.8}" />
            <Setter Property="FontStretch" Value="{Binding DisplayText.Font.Stretch, Mode=OneWay}" />
            <Setter Property="FontWeight" Value="{Binding DisplayText.Font.Weight, Mode=OneWay}" />
            <Setter Property="FontStyle" Value="{Binding DisplayText.Font.Style, Mode=OneWay}" />
            <Setter Property="BlurRadius" Value="{Binding DisplayText.Font.BlurRadius, Mode=OneWay}" />
            <Setter Property="BlurOpacity" Value="{Binding DisplayText.OutlineColor.ScA, Mode=OneWay}" />
            <Setter Property="StrokeOpacity" Value="{Binding DisplayText.OutlineColor.ScA, Mode=OneWay}" />
          </Style>

          <Style x:Key="ThresholdNumericStyle" TargetType="{x:Type ctrl:DenomiNumericTextBlock}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Fill" Value="{Binding DisplayText.Color, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}" />
            <Setter Property="Stroke" Value="{Binding DisplayText.OutlineColor, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}" />
            <Setter Property="FontFamily" Value="{Binding DisplayText.Font.FontFamily, Mode=OneWay}" />
            <Setter Property="FontStretch" Value="{Binding DisplayText.Font.Stretch, Mode=OneWay}" />
            <Setter Property="FontWeight" Value="{Binding DisplayText.Font.Weight, Mode=OneWay}" />
            <Setter Property="FontStyle" Value="{Binding DisplayText.Font.Style, Mode=OneWay}" />
            <Setter Property="BlurOpacity" Value="{Binding DisplayText.OutlineColor.ScA, Mode=OneWay}" />
            <Setter Property="StrokeOpacity" Value="{Binding DisplayText.OutlineColor.ScA, Mode=OneWay}" />
            <Setter Property="FontSize" Value="{Binding DisplayText.Font.Size, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=0.9}" />
            <Setter Property="StrokeThickness" Value="{Binding DisplayText.Font.OutlineThickness, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=1}" />
            <Setter Property="BlurRadius" Value="{Binding DisplayText.Font.BlurRadius, Mode=OneWay, Converter={StaticResource MultipleConverter}, ConverterParameter=1}" />
          </Style>
        </StackPanel.Resources>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
          <ctrl:LightOutlineTextBlock
            Style="{DynamicResource ThresholdLabelStyle}"
            Text="EPS : " />
          <ctrl:DenomiNumericTextBlock
            IsDenomi="{Binding Config.IsDenomi, Mode=OneWay}"
            Style="{DynamicResource ThresholdNumericStyle}"
            Value="{Binding Model.TankEPS, Mode=OneWay}"
            ContentStringFormat="N0" />
        </StackPanel>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
          <ctrl:LightOutlineTextBlock
            Style="{DynamicResource ThresholdLabelStyle}"
            Text="TH : " />
          <ctrl:DenomiNumericTextBlock
            IsDenomi="{Binding Config.IsDenomi, Mode=OneWay}"
            Style="{DynamicResource ThresholdNumericStyle}"
            Value="{Binding Model.NearThreshold, Mode=OneWay}"
            ContentStringFormat="N0" />
        </StackPanel>
      </StackPanel>
      <!-- EPS end -->
    </Grid>
  </Border>
</Window>
