<Window
  x:Class="ACT.SpecialSpellTimer.Config.Views.TagView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:wpf="clr-namespace:FFXIV.Framework.WPF;assembly=FFXIV.Framework"
  xmlns:fwcmn="clr-namespace:FFXIV.Framework.Common;assembly=FFXIV.Framework"
  xmlns:fwcnv="clr-namespace:FFXIV.Framework.WPF.Converters;assembly=FFXIV.Framework"
  xmlns:global="clr-namespace:FFXIV.Framework.Globalization;assembly=FFXIV.Framework"
  xmlns:local="clr-namespace:ACT.SpecialSpellTimer.Config.Views"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:model="clr-namespace:ACT.SpecialSpellTimer.Config.Models"
  xmlns:triggerModel="clr-namespace:ACT.SpecialSpellTimer.Models"
  xmlns:resources="clr-namespace:ACT.SpecialSpellTimer.resources"
  xmlns:system="clr-namespace:System;assembly=mscorlib"
  xmlns:vm="clr-namespace:ACT.SpecialSpellTimer.Config.ViewModels"
  xmlns:fa="http://schemas.fontawesome.io/icons/"
  d:DataContext="{d:DesignInstance Type=local:TagView}"
  DataContext="{Binding RelativeSource={RelativeSource Self}}"
  d:DesignWidth="1280"
  Background="Transparent"
  FontFamily="{DynamicResource UIFont}"
  FontSize="{DynamicResource UIFontSize}"
  FontWeight="{DynamicResource UIFontWeight}"
  FontStyle="{DynamicResource UIFontStyle}"
  FontStretch="{DynamicResource UIFontStretch}"
  RenderOptions.BitmapScalingMode="HighQuality"
  RenderOptions.ClearTypeHint="Enabled"
  RenderOptions.EdgeMode="Unspecified"
  TextOptions.TextFormattingMode="Display"
  TextOptions.TextHintingMode="Animated"
  TextOptions.TextRenderingMode="ClearType"
  mc:Ignorable="d"
  WindowStyle="None"
  AllowsTransparency="True"
  ShowInTaskbar="False"
  Title="Tag"
  ResizeMode="CanResizeWithGrip"
  Width="400" Height="350">

  <Window.Resources>
    <ResourceDictionary>
      <Style TargetType="Label">
        <Setter Property="Padding" Value="0" />
      </Style>

      <Style TargetType="CheckBox">
        <Setter Property="VerticalContentAlignment" Value="Center" />
      </Style>

      <Style TargetType="TextBox">
        <Style.Triggers>
          <Trigger Property="IsReadOnly" Value="True">
            <Setter Property="Foreground" Value="Silver" />
          </Trigger>
        </Style.Triggers>
      </Style>

      <FontFamily x:Key="FontAwesome">pack://application:,,,/FontAwesome.WPF;component/#FontAwesome</FontFamily>

      <fwcnv:BoolToCollapsedConverter x:Key="VisibilityConverter" />
      <fwcnv:BoolToHiddenConverter x:Key="HiddenConverter" />

      <ResourceDictionary.MergedDictionaries>
        <wpf:DesignTimeResourceDictionary Source="../../resources/strings/Strings.SpeSpe.ja-JP.xaml" />
        <wpf:DesignTimeResourceDictionary Source="../../resources/styles/ConfigViewResources.xaml" />
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </Window.Resources>

  <Border
    CornerRadius="8"
    BorderBrush="Orange"
    BorderThickness="3"
    Background="White">

    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>

      <!-- ヘッダエリア -->
      <DockPanel Grid.Row="0">
        <Label DockPanel.Dock="Left" Content="{DynamicResource Tag_Title}" Margin="5" />
        <Button DockPanel.Dock="Right" x:Name="CloseButton" Content="❌" HorizontalAlignment="Right" MinWidth="30" BorderBrush="Transparent" Background="Transparent" />
      </DockPanel>

      <!-- タグ -->
      <ListView
        Grid.Row="1"
        Margin="5 10 5 0"
        BorderThickness="0"
        VirtualizingPanel.IsVirtualizing="True"
        VirtualizingPanel.VirtualizationMode="Recycling"
        ScrollViewer.VerticalScrollBarVisibility="Auto"
        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
        ItemsSource="{Binding Tags, Mode=OneWay}">

        <ListView.ItemContainerStyle>
          <Style TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
          </Style>
        </ListView.ItemContainerStyle>

        <ListView.ItemTemplate>
          <DataTemplate>
            <CheckBox
              IsChecked="{Binding IsSelected, Mode=TwoWay}"
              VerticalContentAlignment="Center"
              Margin="0 0 5 0"
              Content="{Binding Text, Mode=OneWay}"
              Checked="TagsOnChanged"
              Unchecked="TagsOnChanged" />
          </DataTemplate>
        </ListView.ItemTemplate>
      </ListView>

      <!-- ボタンエリア -->
      <StackPanel Grid.Row="2" Orientation="Vertical">
        <Button x:Name="ApplyButton" Content="{DynamicResource Common_Apply}" HorizontalContentAlignment="Left" Background="Transparent" BorderBrush="Transparent" Margin="5" />
      </StackPanel>
    </Grid>
  </Border>
</Window>
